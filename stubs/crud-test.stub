<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use JMac\Testing\Traits\AdditionalAssertions;
use Tests\TestCase;

class {{ class }} extends TestCase
{
    use RefreshDatabase;
    use AdditionalAssertions;

    /** @test */
    public function it_returns_a_list_of_(): void
    {
        // arrange
        $ = ::factory()->count(3)->create();

        // act
        $response = $this->getJson("/");

        // assert
        $response
            ->assertOk()
            ->assertJsonCount(3, 'data')
            ->assertJsonStructure([
                'data' => [
                    '*' => [
                        'id',
                    ],
                ],
            ])
            ->assertJson([
                'data' => $->toArray(),
            ]);
    }

    /** @test */
    public function it_returns_an_empty_collection_of__when_no_records_exist(): void
    {
        // arrange

        // act
        $response = $this->getJson("/");

        // assert
        $response
            ->assertOk()
            ->assertJsonCount(0, 'data')
            ->assertJsonStructure([
                'data' => [],
            ]);
    }

    /** @test */
    public function it_returns_a_specific_(): void
    {
        // arrange
        $ = ::factory()->create();

        // act
        $response = $this->getJson("/");

        // assert
        $response
            ->assertOk()
            ->assertJson([
                'data' => [
                    'id' => $->id,
                ],
            ]);
    }

    /** @test */
    public function it_stores_a_(): void
    {
        // arrange

        // act
        $response = $this->postJson("/");

        // assert
        $response
            ->assertStatus(201)
            ->assertJson([
                'data' => [

                ],
            ]);
    }

    /** @test */
    public function store_validates_using_a_form_request(): void
    {
        $this->assertActionUsesFormRequest(

        );
    }
}
